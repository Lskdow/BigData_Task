1. Garbage Collection(GC)이란?
- 유효하지 않은 메모리를 삭제해주지 않으면 메모리 누수, 즉 memory leak이 발생하게 된다. 이러한 유효하지 않은 메모리를 Garbage라 표현한다.
- 프로그램의 성능을 향상시키기 위해서, 이러한 Garbage들을 삭제해 주어야 하는데, 이러한 유효하지 않은 메모리를 주기적으로 삭제하는 프로세스를 Garbage Collection(GC)한다.
- C나 C++에서는 개발자가 수동으로 메모리 할당 및 해제를 일일이 해야 하는 반면, JAVA나 Python과 같은 경우에는 Garbage Collector가 그 기능을 대행해주고 있다.

2. 왜 필요한가?
- 직접 메모리를 관리하게 되면 크게 두 가지 문제점이 생기게 된다.
- 필요하지 않은 메모리를 비우지 않았을 경우 : 메모리 사용을 마쳤음에도 비우지 않아 memory leak이 발생하게 되고, 장기적인 관점에서 보면 심각한 문제가 발생할 수 있다.
- 사용중인 메모리를 비울 경우 : 메모리에 접근할 때, 프로그램이 예기치 않게 중단되거나 메모리 데이터 값이 손상되어 큰 문제가 발생할 수 있다.
- 이러한 문제들을 해결하기 위해 자동으로 메모리를 관리하는 기능이 필요하게 되었다.

3. 동작 매커니즘
1) Reference Counting (레퍼런스 카운팅)
2) Generational Garbage Collection (세대별 가비지 컬렉션)

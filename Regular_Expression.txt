1. 정규표현식이란?
- 복잡한 문자열을 처리할 때 사용하는 기법.
- 특정 문자열의 패턴을 표현하는 식으로, 복잡한 표현을 간결하게 표현할 수 있게 함.
- 문자열을 처리하는 모든 곳에서 사용함.

2. 왜 필요한가?
- 간편하고 직관적인 코드를 작성하기 위해서 필요함.
- 특정 패턴의 문자열을 검색하는 경우에 매우 유용하며, 문자열의 규칙이 복잡할수록 정규식의 효용은 더 커짐.

3. Python에서의 사용법
- Python에서 정규 표현식을 사용하기 위해서, Python에서 제공하는 정규식 라이브러리를 import 해줘야 함.
- ‘import re’로 라이브러리를 불러옴.

4. 정규표현식 특수문자 
. : 한 개의 임의의 문자
? : 앞에 문자가 존재할 수도, 않을수도 있음. (문자가 0개거나 1개)
* : 앞에 문자가 무한개로 존재할 수도, 않을수도 있음. (문자가 0개 이상)
+ : 앞에 문자가 최소 1개 이상 존재함.
^ : 뒤의 문자열로 문자열이 시작.
$ : 앞의 문자열로 문자열이 시작.
{숫자} : (숫자)만큼 반복.
{숫자,} : (숫자) 이상 만큼 반복.
| : A 또는 B

5. ‘\’를 이용한 문자규칙
\\\ : ‘\’ 문자 자체.
\\d : 모든 숫자.
\\D : 숫자를 제외한 모든 문자.
\\s : 공백.
\\S : 공백을 제외한 문자.
\\w : 문자 또는 숫자.
\\W : 문자 또는 숫자가 아닌 문자
 